{"version":3,"sources":["pages/overview/Block.js","pages/overview/mui/dialog/FormDialogs.js","pages/overview/mui/dialog/AlertDialog.js","pages/overview/mui/dialog/ScrollDialog.js","pages/overview/mui/dialog/SimpleDialogs.js","pages/overview/mui/dialog/MaxWidthDialog.js","pages/overview/mui/dialog/FullScreenDialogs.js","pages/overview/mui/dialog/TransitionsDialogs.js","pages/overview/mui/dialog/index.js"],"names":["Block","title","sx","children","variant","borderRadius","bgcolor","theme","alpha","palette","grey","p","minHeight","Label","component","gutterBottom","color","FormDialogs","useState","open","setOpen","handleClose","Button","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","type","margin","label","DialogActions","AlertDialog","id","ScrollDialog","scroll","setScroll","handleClickOpen","scrollType","descriptionElementRef","useRef","HTMLElement","useEffect","descriptionElement","current","focus","mr","pb","dividers","ref","tabIndex","Array","map","join","emails","SimpleDialog","selectedValue","setSelectedValue","value","Box","textAlign","Typography","List","email","ListItemButton","ListItemAvatar","Avatar","backgroundColor","Iconify","icon","ListItemText","primary","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","noValidate","display","width","flexDirection","FormControl","mt","minWidth","InputLabel","htmlFor","Select","onChange","event","target","inputProps","name","MenuItem","FormControlLabel","control","Switch","checked","Transition","forwardRef","props","Slide","direction","FullScreenDialogs","fullScreen","TransitionComponent","AppBar","position","Toolbar","IconButton","edge","flex","ml","secondary","Divider","TransitionsDialogs","keepMounted","style","alignItems","justifyContent","RootStyle","styled","paddingTop","spacing","paddingBottom","DialogComponent","Page","pt","mb","mode","Container","HeaderBreadcrumbs","heading","links","href","PATH_PAGE","components","moreLink","Masonry","columns","xs","md"],"mappings":"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","file":"static/js/102.642f6ace.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBlock.propTypes = {\n  children: PropTypes.any.isRequired,\n  sx: PropTypes.object,\n  title: PropTypes.string,\n};\n\nexport function Block({ title, sx, children }) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport function Label({ title }) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Button,\n  Dialog,\n  TextField,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function FormDialogs() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"warning\" onClick={handleClickOpen}>\n        Form Dialogs\n      </Button>\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            fullWidth\n            type=\"email\"\n            margin=\"dense\"\n            variant=\"outlined\"\n            label=\"Email Address\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} variant=\"contained\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  DialogContentText\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function AlertDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color=\"info\" variant=\"outlined\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Use Google's location service?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Disagree</Button>\n          <Button onClick={handleClose} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState, useRef, useEffect } from 'react';\n// @mui\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function ScrollDialog() {\n  const [open, setOpen] = useState(false);\n  const [scroll, setScroll] = useState('paper');\n\n  const handleClickOpen = (scrollType) => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = useRef < HTMLElement > null;\n\n  useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen('paper')} sx={{ mr: 2 }}>\n        scroll=paper\n      </Button>\n      <Button variant=\"outlined\" onClick={handleClickOpen('body')}>\n        scroll=body\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} scroll={scroll}>\n        <DialogTitle sx={{ pb: 2 }}>Subscribe</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText id=\"scroll-dialog-description\" ref={descriptionElementRef} tabIndex={-1}>\n            {[...new Array(50)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`\n              )\n              .join('\\n')}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  List,\n  Avatar,\n  Button,\n  Dialog,\n  Typography,\n  DialogTitle,\n  ListItemText,\n  ListItemAvatar,\n  ListItemButton,\n} from '@mui/material';\n// components\nimport Iconify from '../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nexport default function SimpleDialog() {\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <Box sx={{ textAlign: 'center' }}>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n\n      <Dialog open={open} onClose={() => handleClose(selectedValue)}>\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n        <List>\n          {emails.map((email) => (\n            <ListItemButton onClick={() => handleClose(email)} key={email}>\n              <ListItemAvatar>\n                <Avatar\n                  sx={{\n                    color: 'info.main',\n                    backgroundColor: 'info.lighter',\n                  }}\n                >\n                  <Iconify icon=\"eva:person-fill\" />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={email} />\n            </ListItemButton>\n          ))}\n\n          <ListItemButton autoFocus onClick={() => handleClose('addAccount')}>\n            <ListItemAvatar>\n              <Avatar>\n                <Iconify icon=\"eva:plus-fill\" />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Add account\" />\n          </ListItemButton>\n        </List>\n      </Dialog>\n    </Box>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Button,\n  Dialog,\n  Select,\n  Switch,\n  MenuItem,\n  InputLabel,\n  DialogTitle,\n  FormControl,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n  DialogContentText,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function MaxWidthDialog() {\n  const [open, setOpen] = useState(false);\n  const [fullWidth, setFullWidth] = useState(true);\n  const [maxWidth, setMaxWidth] = useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMaxWidthChange = (event) => {\n    setMaxWidth(event.target.value);\n  };\n\n  const handleFullWidthChange = (event) => {\n    setFullWidth(event.target.checked);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Max Width Dialog\n      </Button>\n\n      <Dialog open={open} maxWidth={maxWidth} onClose={handleClose} fullWidth={fullWidth}>\n        <DialogTitle>Optional sizes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>You can set my maximum width and whether to adapt or not.</DialogContentText>\n\n          <Box\n            component=\"form\"\n            noValidate\n            sx={{\n              margin: 'auto',\n              display: 'flex',\n              width: 'fit-content',\n              flexDirection: 'column',\n            }}\n          >\n            <FormControl sx={{ mt: 2, minWidth: 120 }}>\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                autoFocus\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                label=\"maxWidth\"\n                inputProps={{\n                  name: 'max-width',\n                  id: 'max-width',\n                }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControlLabel\n              control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\n              label=\"Full width\"\n              sx={{ mt: 1 }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"contained\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { forwardRef, useState } from 'react';\n// @mui\nimport {\n  List,\n  Slide,\n  Button,\n  Dialog,\n  AppBar,\n  Toolbar,\n  Divider,\n  IconButton,\n  Typography,\n  ListItemText,\n  ListItemButton,\n} from '@mui/material';\n// components\nimport Iconify from '../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function FullScreenDialogs() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"error\" onClick={handleClickOpen}>\n        Full Screen Dialogs\n      </Button>\n\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <IconButton color=\"inherit\" edge=\"start\" onClick={handleClose}>\n              <Iconify icon=\"eva:close-fill\" />\n            </IconButton>\n            <Typography variant=\"h6\" sx={{ flex: 1, ml: 2 }}>\n              Sound\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              Save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <ListItemButton>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItemButton>\n\n          <Divider />\n\n          <ListItemButton>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItemButton>\n        </List>\n      </Dialog>\n    </>\n  );\n}\n","import { forwardRef, useState } from 'react';\n// @mui\nimport { Slide, Dialog, Button, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function TransitionsDialogs() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"success\" onClick={handleClickOpen}>\n        Transitions Dialogs\n      </Button>\n\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no\n            apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"inherit\" onClick={handleClose}>\n            Disagree\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Container } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport FormDialogs from './FormDialogs';\nimport AlertDialog from './AlertDialog';\nimport ScrollDialog from './ScrollDialog';\nimport SimpleDialogs from './SimpleDialogs';\nimport MaxWidthDialog from './MaxWidthDialog';\nimport FullScreenDialogs from './FullScreenDialogs';\nimport TransitionsDialogs from './TransitionsDialogs';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function DialogComponent() {\n  return (\n    <Page title=\"Components: Dialog\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Dialog\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Dialog' }]}\n              moreLink=\"https://mui.com/components/dialogs\"\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Masonry columns={{ xs: 1, md: 3 }} spacing={3}>\n            <Block title=\"Simple\" sx={style}>\n              <SimpleDialogs />\n            </Block>\n\n            <Block title=\"Alerts\" sx={style}>\n              <AlertDialog />\n            </Block>\n\n            <Block title=\"Transitions\" sx={style}>\n              <TransitionsDialogs />\n            </Block>\n\n            <Block title=\"Form\" sx={style}>\n              <FormDialogs />\n            </Block>\n\n            <Block title=\"Full Screen\" sx={style}>\n              <FullScreenDialogs />\n            </Block>\n\n            <Block title=\"Max Width Dialog\" sx={style}>\n              <MaxWidthDialog />\n            </Block>\n\n            <Block title=\"Scrolling Content Dialogs\" sx={style}>\n              <ScrollDialog />\n            </Block>\n          </Masonry>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}