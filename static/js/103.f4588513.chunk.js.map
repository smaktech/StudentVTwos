{"version":3,"sources":["pages/overview/Block.js","pages/overview/mui/pickers/PickerDate.js","pages/overview/mui/pickers/PickerTime.js","pages/overview/mui/pickers/PickerDateTime.js","pages/overview/mui/pickers/PickerDateRange.js","pages/overview/mui/pickers/index.js"],"names":["Block","title","sx","children","variant","borderRadius","bgcolor","theme","alpha","palette","grey","p","minHeight","Label","component","gutterBottom","color","PickerDate","useState","Date","value","setValue","Masonry","columns","xs","md","spacing","DesktopDatePicker","label","minDate","onChange","newValue","renderInput","params","TextField","fullWidth","margin","MobileDatePicker","orientation","StaticDatePicker","openTo","shouldDisableDate","isWeekend","DatePicker","views","helperText","maxDate","PickerTime","TimePicker","ampm","MobileTimePicker","DesktopTimePicker","Stack","StaticTimePicker","displayStaticWrapperAs","PickerDateTime","valueResponsive","setValueResponsive","direction","DateTimePicker","props","MobileDateTimePicker","DesktopDateTimePicker","PickerDateRange","DateRangePicker","startText","endText","startProps","endProps","Box","mx","MobileDateRangePicker","DesktopDateRangePicker","Typography","calendars","StaticDateRangePicker","PICKERS","name","RootStyle","styled","paddingTop","paddingBottom","PickersComponent","Page","pt","pb","mb","mode","Container","HeaderBreadcrumbs","heading","links","href","PATH_PAGE","components","moreLink","TabContext","TabList","event","map","tab","index","Tab","disableRipple","String","TabPanel","mt"],"mappings":"oRAaO,SAASA,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,SACjC,OACE,eAAC,IAAD,CACEC,QAAQ,WACRF,GAAI,CACFG,aAAc,IACdC,QAAS,SAACC,GAAD,OAAWC,YAAMD,EAAME,QAAQC,KAAK,KAAM,OAJvD,UAOGT,GAAS,cAAC,IAAD,CAAYA,MAAOA,IAC7B,cAAC,IAAD,CACEC,GAAE,aACAS,EAAG,EACHC,UAAW,KACRV,GAJP,SAOGC,OAYF,SAASU,EAAT,GAA2B,IAAVZ,EAAS,EAATA,MACtB,OACE,cAAC,IAAD,CAAYG,QAAQ,WAAWU,UAAU,IAAIC,cAAY,EAACb,GAAI,CAAEc,MAAO,kBAAvE,SACGf,M,6RCnCQ,SAASgB,IACtB,MAA0BC,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,eAACC,EAAA,EAAD,CAASC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GAAKC,QAAS,EAA7C,UACE,eAAC1B,EAAA,EAAD,CAAOC,MAAM,QAAb,UACE,cAAC0B,EAAA,EAAD,CACEC,MAAM,cACNR,MAAOA,EACPS,QAAS,IAAIV,KAAK,cAClBW,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,yBAAWC,WAAS,GAAKF,GAAzB,IAAiCG,OAAO,eAGnE,cAACC,EAAA,EAAD,CACEC,YAAY,WACZV,MAAM,aACNR,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,yBAAWC,WAAS,GAAKF,GAAzB,IAAiCG,OAAO,kBAIrE,cAACpC,EAAA,EAAD,CAAOC,MAAM,cAAb,SACE,cAACsC,EAAA,EAAD,CACED,YAAY,YACZE,OAAO,MACPpB,MAAOA,EACPqB,kBAAmBC,IACnBZ,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,eAAeD,SAI5C,eAACjC,EAAA,EAAD,CAAOC,MAAM,mBAAb,UACE,cAAC0C,EAAA,EAAD,CACEC,MAAO,CAAC,QACRhB,MAAM,YACNR,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,WAAS,EAACC,OAAO,SAASS,WAAY,WAExF,cAACF,EAAA,EAAD,CACEC,MAAO,CAAC,OAAQ,SAChBhB,MAAM,iBACNC,QAAS,IAAIV,KAAK,cAClB2B,QAAS,IAAI3B,KAAK,cAClBC,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,WAAS,EAACC,OAAO,SAASS,WAAY,WAExF,cAACF,EAAA,EAAD,CACEH,OAAO,OACPI,MAAO,CAAC,OAAQ,QAAS,OACzBhB,MAAM,uBACNR,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,WAAS,EAACC,OAAO,SAASS,WAAY,WAExF,cAACF,EAAA,EAAD,CACEC,MAAO,CAAC,MAAO,QAAS,QACxBhB,MAAM,4BACNR,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,WAAS,EAACC,OAAO,SAASS,WAAY,WAExF,cAACF,EAAA,EAAD,CACEC,MAAO,CAAC,OACRhB,MAAM,YACNR,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,WAAS,EAACC,OAAO,SAASS,WAAY,iB,qDCxFjF,SAASE,IACtB,MAA0B7B,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,eAACC,EAAA,EAAD,CAASC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GAAKC,QAAS,EAA7C,UACE,eAAC1B,EAAA,EAAD,CAAOC,MAAM,QAAb,UACE,cAAC+C,EAAA,EAAD,CACEpB,MAAM,WACNR,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,yBAAWC,WAAS,GAAKF,GAAzB,IAAiCG,OAAO,eAEnE,cAACY,EAAA,EAAD,CACEC,MAAM,EACNrB,MAAM,WACNR,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,yBAAWC,WAAS,GAAKF,GAAzB,IAAiCG,OAAO,kBAIrE,eAACpC,EAAA,EAAD,CAAOC,MAAM,iBAAb,UACE,cAACiD,EAAA,EAAD,CACEZ,YAAY,WACZV,MAAM,aACNR,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,WAAS,EAACC,OAAO,eAEnE,cAACe,EAAA,EAAD,CACEvB,MAAM,cACNR,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBG,OAAO,SAASD,WAAS,QAE3E,cAACa,EAAA,EAAD,CACE5B,MAAOA,EACPU,SAAUT,EACVW,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBG,OAAO,SAASD,WAAS,WAI7E,cAACnC,EAAA,EAAD,CAAOC,MAAM,cAAb,SACE,eAACmD,EAAA,EAAD,CAAO1B,QAAS,EAAhB,UACE,cAAC2B,EAAA,EAAD,CACEf,YAAY,WACZgB,uBAAuB,SACvBlC,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,eAAeD,OAG1C,cAACoB,EAAA,EAAD,CACEJ,MAAI,EACJX,YAAY,YACZE,OAAO,UACPpB,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,eAAeD,e,kCCtErC,SAASsB,IACtB,MAA0BrC,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8CH,mBAAS,IAAIC,KAAK,6BAAhE,mBAAOqC,EAAP,KAAwBC,EAAxB,KAEA,OACE,eAACL,EAAA,EAAD,CAAO1B,QAAS,EAAGgC,UAAW,CAAElC,GAAI,SAAUC,GAAI,OAAlD,UACE,cAACzB,EAAA,EAAD,CAAOC,MAAM,QAAb,SACE,cAAC0D,EAAA,EAAD,CACE3B,YAAa,SAAC4B,GAAD,OAAW,cAAC1B,EAAA,EAAD,2BAAe0B,GAAf,IAAsBzB,WAAS,MACvDP,MAAM,iBACNR,MAAOA,EACPU,SAAUT,MAId,eAACrB,EAAA,EAAD,CAAOC,MAAM,iBAAb,UACE,cAAC4D,EAAA,EAAD,CACEzC,MAAOoC,EACP1B,SAAU,SAACC,GACT0B,EAAmB1B,IAErBC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,WAAS,EAACC,OAAO,eAEnE,cAAC0B,EAAA,EAAD,CACE1C,MAAOoC,EACP1B,SAAU,SAACC,GACT0B,EAAmB1B,IAErBC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBG,OAAO,SAASD,WAAS,QAE3E,cAACwB,EAAA,EAAD,CACEvC,MAAOoC,EACP1B,SAAU,SAACC,GACT0B,EAAmB1B,IAErBC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBG,OAAO,SAASD,WAAS,c,oDC7BpE,SAAS4B,IACtB,MAA0B7C,mBAAS,CAAC,KAAM,OAA1C,mBAAOE,EAAP,KAAcC,EAAd,KAEA,OACE,eAACC,EAAA,EAAD,CAASC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GAAKC,QAAS,EAA7C,UACE,cAAC1B,EAAA,EAAD,CAAOC,MAAM,QAAb,SACE,cAAC+D,EAAA,EAAD,CACEC,UAAU,WACVC,QAAQ,YACR9C,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACmC,EAAYC,GAAb,OACX,qCACE,cAAClC,EAAA,EAAD,eAAeiC,IACf,cAACE,EAAA,EAAD,CAAKnE,GAAI,CAAEoE,GAAI,GAAf,gBACA,cAACpC,EAAA,EAAD,eAAekC,YAMvB,eAACpE,EAAA,EAAD,CAAOC,MAAM,iBAAb,UACE,cAACsE,EAAA,EAAD,CACEN,UAAU,eACV7C,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACmC,EAAYC,GAAb,OACX,qCACE,cAAClC,EAAA,EAAD,eAAeiC,IACf,cAACE,EAAA,EAAD,CAAKnE,GAAI,CAAEoE,GAAI,GAAf,kBACA,cAACpC,EAAA,EAAD,eAAekC,UAIrB,uBAEA,cAACI,EAAA,EAAD,CACEP,UAAU,gBACV7C,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACmC,EAAYC,GAAb,OACX,qCACE,cAAClC,EAAA,EAAD,eAAeiC,IACf,cAACE,EAAA,EAAD,CAAKnE,GAAI,CAAEoE,GAAI,GAAf,kBACA,cAACpC,EAAA,EAAD,eAAekC,aAMvB,eAACpE,EAAA,EAAD,CAAOC,MAAM,6BAAb,UACE,cAACwE,EAAA,EAAD,CAAY1D,cAAY,EAAxB,0BACA,cAACiD,EAAA,EAAD,CACEU,UAAW,EACXtD,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACmC,EAAYC,GAAb,OACX,qCACE,cAAClC,EAAA,EAAD,eAAeiC,IACf,cAACE,EAAA,EAAD,CAAKnE,GAAI,CAAEoE,GAAI,GAAf,gBACA,cAACpC,EAAA,EAAD,eAAekC,UAKrB,uBAEA,cAACK,EAAA,EAAD,CAAY1D,cAAY,EAAxB,0BACA,cAACiD,EAAA,EAAD,CACEU,UAAW,EACXtD,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACmC,EAAYC,GAAb,OACX,qCACE,cAAClC,EAAA,EAAD,eAAeiC,IACf,cAACE,EAAA,EAAD,CAAKnE,GAAI,CAAEoE,GAAI,GAAf,gBACA,cAACpC,EAAA,EAAD,eAAekC,UAKrB,uBAEA,cAACK,EAAA,EAAD,CAAY1D,cAAY,EAAxB,0BACA,cAACiD,EAAA,EAAD,CACEU,UAAW,EACXtD,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACmC,EAAYC,GAAb,OACX,qCACE,cAAClC,EAAA,EAAD,eAAeiC,IACf,cAACE,EAAA,EAAD,CAAKnE,GAAI,CAAEoE,GAAI,GAAf,gBACA,cAACpC,EAAA,EAAD,eAAekC,aAMvB,cAACpE,EAAA,EAAD,CAAOC,MAAM,cAAb,SACE,cAAC0E,EAAA,EAAD,CACErB,uBAAuB,UACvBlC,MAAOA,EACPU,SAAU,SAACC,GACTV,EAASU,IAEXC,YAAa,SAACmC,EAAYC,GAAb,OACX,qCACE,cAAClC,EAAA,EAAD,2BAAeiC,GAAf,IAA2B/D,QAAQ,cACnC,cAACiE,EAAA,EAAD,CAAKnE,GAAI,CAAEoE,GAAI,GAAf,gBACA,cAACpC,EAAA,EAAD,2BAAekC,GAAf,IAAyBhE,QAAQ,yBCtH/C,IAAMwE,EAAU,CACd,CAAEC,KAAM,OAAQ/D,UAAW,cAACG,EAAD,KAC3B,CAAE4D,KAAM,WAAY/D,UAAW,cAACyC,EAAD,KAC/B,CAAEsB,KAAM,YAAa/D,UAAW,cAACiD,EAAD,KAChC,CAAEc,KAAM,OAAQ/D,UAAW,cAACiC,EAAD,MAGvB+B,EAAYC,YAAO,MAAPA,EAAc,gBAAGxE,EAAH,EAAGA,MAAH,MAAgB,CAC9CyE,WAAYzE,EAAMmB,QAAQ,IAC1BuD,cAAe1E,EAAMmB,QAAQ,QAKhB,SAASwD,IACtB,MAA0BhE,mBAAS,KAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAMA,OACE,cAAC8D,EAAA,EAAD,CAAMlF,MAAM,sBAAZ,SACE,eAAC6E,EAAD,WACE,cAACT,EAAA,EAAD,CACEnE,GAAI,CACFkF,GAAI,EACJC,GAAI,EACJC,GAAI,GACJhF,QAAS,SAACC,GAAD,MAAmC,UAAvBA,EAAME,QAAQ8E,KAAmB,WAAa,aALvE,SAQE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,sBACRC,MAAO,CAAC,CAAEd,KAAM,aAAce,KAAMC,IAAUC,YAAc,CAAEjB,KAAM,wBACpEkB,SAAS,2CAKf,cAACP,EAAA,EAAD,UACE,eAACQ,EAAA,EAAD,CAAY5E,MAAOA,EAAnB,UACE,cAAC6E,EAAA,EAAD,CAASnE,SA1BE,SAACoE,EAAOnE,GAC3BV,EAASU,IAyBgC,aAAW,uBAA5C,SACG6C,EAAQuB,KAAI,SAACC,EAAKC,GAAN,OACX,cAACC,EAAA,EAAD,CAAKC,eAAa,EAAgB3E,MAAOwE,EAAIvB,KAAMzD,MAAOoF,OAAOH,EAAQ,IAAjDD,EAAIvB,WAI/BD,EAAQuB,KAAI,SAACC,EAAKC,GAAN,OACX,cAACI,EAAA,EAAD,CAAyBrF,MAAOoF,OAAOH,EAAQ,GAAInG,GAAI,CAAEwG,GAAI,GAA7D,SACGN,EAAItF,WADQsF,EAAIvB","file":"static/js/103.f4588513.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBlock.propTypes = {\n  children: PropTypes.any.isRequired,\n  sx: PropTypes.object,\n  title: PropTypes.string,\n};\n\nexport function Block({ title, sx, children }) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport function Label({ title }) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n","import { useState } from 'react';\nimport isWeekend from 'date-fns/isWeekend';\n// @mui\nimport { TextField } from '@mui/material';\nimport { Masonry, DatePicker, StaticDatePicker, MobileDatePicker, DesktopDatePicker } from '@mui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nexport default function PickerDate() {\n  const [value, setValue] = useState(new Date());\n\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n      <Block title=\"Basic\">\n        <DesktopDatePicker\n          label=\"For desktop\"\n          value={value}\n          minDate={new Date('2017-01-01')}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField fullWidth {...params} margin=\"normal\" />}\n        />\n\n        <MobileDatePicker\n          orientation=\"portrait\"\n          label=\"For mobile\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField fullWidth {...params} margin=\"normal\" />}\n        />\n      </Block>\n\n      <Block title=\"Static mode\">\n        <StaticDatePicker\n          orientation=\"landscape\"\n          openTo=\"day\"\n          value={value}\n          shouldDisableDate={isWeekend}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n      </Block>\n\n      <Block title=\"Views playground\">\n        <DatePicker\n          views={['year']}\n          label=\"Year only\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} fullWidth margin=\"normal\" helperText={null} />}\n        />\n        <DatePicker\n          views={['year', 'month']}\n          label=\"Year and Month\"\n          minDate={new Date('2012-03-01')}\n          maxDate={new Date('2023-06-01')}\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} fullWidth margin=\"normal\" helperText={null} />}\n        />\n        <DatePicker\n          openTo=\"year\"\n          views={['year', 'month', 'day']}\n          label=\"Year, month and date\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} fullWidth margin=\"normal\" helperText={null} />}\n        />\n        <DatePicker\n          views={['day', 'month', 'year']}\n          label=\"Invert the order of views\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} fullWidth margin=\"normal\" helperText={null} />}\n        />\n        <DatePicker\n          views={['day']}\n          label=\"Just date\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} fullWidth margin=\"normal\" helperText={null} />}\n        />\n      </Block>\n    </Masonry>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { TextField, Stack } from '@mui/material';\nimport { Masonry, TimePicker, MobileTimePicker, StaticTimePicker, DesktopTimePicker } from '@mui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nexport default function PickerTime() {\n  const [value, setValue] = useState(new Date());\n\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n      <Block title=\"Basic\">\n        <TimePicker\n          label=\"12 hours\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField fullWidth {...params} margin=\"normal\" />}\n        />\n        <TimePicker\n          ampm={false}\n          label=\"24 hours\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField fullWidth {...params} margin=\"normal\" />}\n        />\n      </Block>\n\n      <Block title=\"Responsiveness\">\n        <MobileTimePicker\n          orientation=\"portrait\"\n          label=\"For mobile\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} fullWidth margin=\"normal\" />}\n        />\n        <DesktopTimePicker\n          label=\"For desktop\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} margin=\"normal\" fullWidth />}\n        />\n        <TimePicker\n          value={value}\n          onChange={setValue}\n          renderInput={(params) => <TextField {...params} margin=\"normal\" fullWidth />}\n        />\n      </Block>\n\n      <Block title=\"Static mode\">\n        <Stack spacing={3}>\n          <StaticTimePicker\n            orientation=\"portrait\"\n            displayStaticWrapperAs=\"mobile\"\n            value={value}\n            onChange={(newValue) => {\n              setValue(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n\n          <StaticTimePicker\n            ampm\n            orientation=\"landscape\"\n            openTo=\"minutes\"\n            value={value}\n            onChange={(newValue) => {\n              setValue(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </Stack>\n      </Block>\n    </Masonry>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { TextField, Stack } from '@mui/material';\nimport { DateTimePicker, MobileDateTimePicker, DesktopDateTimePicker } from '@mui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nexport default function PickerDateTime() {\n  const [value, setValue] = useState(new Date());\n  const [valueResponsive, setValueResponsive] = useState(new Date('2018-01-01T00:00:00.000Z'));\n\n  return (\n    <Stack spacing={3} direction={{ xs: 'column', md: 'row' }}>\n      <Block title=\"Basic\">\n        <DateTimePicker\n          renderInput={(props) => <TextField {...props} fullWidth />}\n          label=\"DateTimePicker\"\n          value={value}\n          onChange={setValue}\n        />\n      </Block>\n\n      <Block title=\"Responsiveness\">\n        <MobileDateTimePicker\n          value={valueResponsive}\n          onChange={(newValue) => {\n            setValueResponsive(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} fullWidth margin=\"normal\" />}\n        />\n        <DesktopDateTimePicker\n          value={valueResponsive}\n          onChange={(newValue) => {\n            setValueResponsive(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} margin=\"normal\" fullWidth />}\n        />\n        <DateTimePicker\n          value={valueResponsive}\n          onChange={(newValue) => {\n            setValueResponsive(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} margin=\"normal\" fullWidth />}\n        />\n      </Block>\n    </Stack>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { Box, TextField, Typography } from '@mui/material';\nimport {\n  Masonry,\n  DateRangePicker,\n  MobileDateRangePicker,\n  DesktopDateRangePicker,\n  StaticDateRangePicker,\n} from '@mui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nexport default function PickerDateRange() {\n  const [value, setValue] = useState([null, null]);\n\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n      <Block title=\"Basic\">\n        <DateRangePicker\n          startText=\"Check-in\"\n          endText=\"Check-out\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(startProps, endProps) => (\n            <>\n              <TextField {...startProps} />\n              <Box sx={{ mx: 2 }}>to</Box>\n              <TextField {...endProps} />\n            </>\n          )}\n        />\n      </Block>\n\n      <Block title=\"Responsiveness\">\n        <MobileDateRangePicker\n          startText=\"Mobile start\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(startProps, endProps) => (\n            <>\n              <TextField {...startProps} />\n              <Box sx={{ mx: 2 }}> to </Box>\n              <TextField {...endProps} />\n            </>\n          )}\n        />\n        <br />\n\n        <DesktopDateRangePicker\n          startText=\"Desktop start\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(startProps, endProps) => (\n            <>\n              <TextField {...startProps} />\n              <Box sx={{ mx: 2 }}> to </Box>\n              <TextField {...endProps} />\n            </>\n          )}\n        />\n      </Block>\n\n      <Block title=\"Different number of months\">\n        <Typography gutterBottom> 1 calendar </Typography>\n        <DateRangePicker\n          calendars={1}\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(startProps, endProps) => (\n            <>\n              <TextField {...startProps} />\n              <Box sx={{ mx: 2 }}>to</Box>\n              <TextField {...endProps} />\n            </>\n          )}\n        />\n\n        <br />\n\n        <Typography gutterBottom> 2 calendars</Typography>\n        <DateRangePicker\n          calendars={2}\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(startProps, endProps) => (\n            <>\n              <TextField {...startProps} />\n              <Box sx={{ mx: 2 }}>to</Box>\n              <TextField {...endProps} />\n            </>\n          )}\n        />\n\n        <br />\n\n        <Typography gutterBottom> 3 calendars</Typography>\n        <DateRangePicker\n          calendars={3}\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(startProps, endProps) => (\n            <>\n              <TextField {...startProps} />\n              <Box sx={{ mx: 2 }}>to</Box>\n              <TextField {...endProps} />\n            </>\n          )}\n        />\n      </Block>\n\n      <Block title=\"Static mode\">\n        <StaticDateRangePicker\n          displayStaticWrapperAs=\"desktop\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(startProps, endProps) => (\n            <>\n              <TextField {...startProps} variant=\"standard\" />\n              <Box sx={{ mx: 2 }}>to</Box>\n              <TextField {...endProps} variant=\"standard\" />\n            </>\n          )}\n        />\n      </Block>\n    </Masonry>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { TabPanel, TabContext, TabList } from '@mui/lab';\nimport { styled } from '@mui/material/styles';\nimport { Box, Container, Tab } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport PickerDate from './PickerDate';\nimport PickerTime from './PickerTime';\nimport PickerDateTime from './PickerDateTime';\nimport PickerDateRange from './PickerDateRange';\n\n// ----------------------------------------------------------------------\n\nconst PICKERS = [\n  { name: 'Date', component: <PickerDate /> },\n  { name: 'DateTime', component: <PickerDateTime /> },\n  { name: 'DateRange', component: <PickerDateRange /> },\n  { name: 'Time', component: <PickerTime /> },\n];\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function PickersComponent() {\n  const [value, setValue] = useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Page title=\"Components: Pickers\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Date / Time pickers\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Date / Time pickers' }]}\n              moreLink=\"https://mui.com/components/pickers\"\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <TabContext value={value}>\n            <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n              {PICKERS.map((tab, index) => (\n                <Tab disableRipple key={tab.name} label={tab.name} value={String(index + 1)} />\n              ))}\n            </TabList>\n\n            {PICKERS.map((tab, index) => (\n              <TabPanel key={tab.name} value={String(index + 1)} sx={{ mt: 5 }}>\n                {tab.component}\n              </TabPanel>\n            ))}\n          </TabContext>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}