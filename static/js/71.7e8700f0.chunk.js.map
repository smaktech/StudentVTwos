{"version":3,"sources":["pages/overview/Block.js","../node_modules/@mui/lab/Masonry/masonryClasses.js","../node_modules/@mui/lab/Masonry/Masonry.js","pages/overview/mui/Checkboxes.js"],"names":["Block","title","sx","children","variant","borderRadius","bgcolor","theme","alpha","palette","grey","p","minHeight","Label","component","gutterBottom","color","getMasonryUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","parseToNumber","val","Number","replace","MasonryRoot","styled","name","overridesResolver","props","styles","root","ownerState","width","display","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","spacing","i","defaultColumns","order","height","defaultHeight","margin","_extends","toFixed","spacingValues","resolveBreakpointValues","values","breakpoints","transformer","createUnarySpacing","deepmerge","handleBreakpoints","propValue","themeSpacingValue","getValue","maxColumnHeight","Math","ceil","columnValues","columns","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","Masonry","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","masonryRef","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","classes","composeClasses","useUtilityClasses","observer","ResizeObserver","elements","masonry","masonryFirstChild","parentWidth","childWidth","_elements$","_masonryFirstChild","_masonryFirstChild$co","_masonryFirstChild2","_elements$2","_masonry$contentRect","target","includes","contentRect","firstChild","clientWidth","parentElement","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","length","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","min","style","max","resizeObserver","current","container","observe","disconnect","handleRef","useForkRef","lineBreakStyle","flexBasis","padding","lineBreaks","map","_","index","_jsx","_jsxs","as","clsx","alignItems","justifyContent","flexWrap","m","RootStyle","paddingTop","paddingBottom","RadioButtons","useState","checked","setChecked","pt","pb","mb","mode","heading","links","href","PATH_PAGE","components","moreLink","xs","md","defaultChecked","indeterminate","disabled","label","control","size","icon","checkedIcon","row","value","labelPlacement","onChange","event"],"mappings":"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","file":"static/js/71.7e8700f0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBlock.propTypes = {\n  children: PropTypes.any.isRequired,\n  sx: PropTypes.object,\n  title: PropTypes.string,\n};\n\nexport function Block({ title, sx, children }) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport function Label({ title }) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMasonryUtilityClass(slot) {\n  return generateUtilityClass('MuiMasonry', slot);\n}\nconst masonryClasses = generateUtilityClasses('MuiMasonry', ['root']);\nexport default masonryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\n\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'space-between',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = Number(theme.spacing(ownerState.defaultSpacing).replace('px', ''));\n\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n\n  const spacingStyleFromPropValue = propValue => {\n    const themeSpacingValue = Number(propValue);\n    const spacing = Number(getValue(transformer, themeSpacingValue).replace('px', ''));\n    return _extends({\n      margin: -(spacing / 2),\n      '& > *': {\n        margin: spacing / 2\n      }\n    }, ownerState.maxColumnHeight && {\n      height: Math.ceil(ownerState.maxColumnHeight + spacing)\n    });\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues !== 'object' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue)); // configure width for responsive spacing values\n\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n\n      return null;\n    }));\n  }\n\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    columns = 4,\n    spacing = 1,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleResize = elements => {\n    if (!elements) {\n      return;\n    }\n\n    let masonry;\n    let masonryFirstChild;\n    let parentWidth;\n    let childWidth;\n\n    if (elements[0].target.className.includes(classes.root)) {\n      var _elements$, _masonryFirstChild, _masonryFirstChild$co, _masonryFirstChild2;\n\n      masonry = elements[0].target;\n      parentWidth = elements[0].contentRect.width;\n      masonryFirstChild = ((_elements$ = elements[1]) == null ? void 0 : _elements$.target) || masonry.firstChild;\n      childWidth = ((_masonryFirstChild = masonryFirstChild) == null ? void 0 : (_masonryFirstChild$co = _masonryFirstChild.contentRect) == null ? void 0 : _masonryFirstChild$co.width) || ((_masonryFirstChild2 = masonryFirstChild) == null ? void 0 : _masonryFirstChild2.clientWidth) || 0;\n    } else {\n      var _elements$2, _masonry$contentRect;\n\n      masonryFirstChild = elements[0].target;\n      childWidth = elements[0].contentRect.width;\n      masonry = ((_elements$2 = elements[1]) == null ? void 0 : _elements$2.target) || masonryFirstChild.parentElement;\n      parentWidth = ((_masonry$contentRect = masonry.contentRect) == null ? void 0 : _masonry$contentRect.width) || masonry.clientWidth;\n    }\n\n    if (parentWidth === 0 || childWidth === 0 || !masonry || !masonryFirstChild) {\n      return;\n    }\n\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (childWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom); // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      } // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n\n\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n\n    if (!skip) {\n      setMaxColumnHeight(Math.max(...columnHeights));\n      const numOfLineBreaks = currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0;\n      setNumberOfLineBreaks(numOfLineBreaks);\n    }\n  };\n\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current; // IE and old browsers are not supported\n\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n\n    const container = masonryRef.current;\n\n    if (container && resizeObserver) {\n      // only the masonry container and its first child are observed for resizing;\n      // this might cause unforeseen problems in some use cases;\n      resizeObserver.observe(container);\n\n      if (container.firstChild) {\n        resizeObserver.observe(container.firstChild);\n      }\n    }\n\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n  const lineBreakStyle = {\n    flexBasis: '100%',\n    width: 0,\n    margin: 0,\n    padding: 0\n  }; //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;","import { useState } from 'react';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Checkbox, FormGroup, Container, FormControl, FormControlLabel } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Page from '../../../components/Page';\nimport Iconify from '../../../components/Iconify';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\n//\nimport { Block } from '../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { m: '8px !important' },\n};\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function RadioButtons() {\n  const [checked, setChecked] = useState([true, false]);\n\n  const handleChange1 = (event) => {\n    setChecked([event.target.checked, event.target.checked]);\n  };\n\n  const handleChange2 = (event) => {\n    setChecked([event.target.checked, checked[1]]);\n  };\n\n  const handleChange3 = (event) => {\n    setChecked([checked[0], event.target.checked]);\n  };\n\n  return (\n    <Page title=\"Components: Checkboxes\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Checkboxes\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Checkboxes' }]}\n              moreLink=\"https://mui.com/components/checkboxes\"\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n            <Block title=\"Basic\" sx={style}>\n              <Checkbox />\n              <Checkbox defaultChecked />\n              <Checkbox defaultChecked indeterminate />\n              <Checkbox disabled />\n              <Checkbox disabled defaultChecked />\n              <Checkbox disabled indeterminate />\n            </Block>\n\n            <Block title=\"Size & Custom Icon\" sx={style}>\n              <FormControlLabel label=\"Normal\" control={<Checkbox defaultChecked />} />\n              <FormControlLabel label=\"Small\" control={<Checkbox defaultChecked size=\"small\" />} />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"info\"\n                    icon={<Iconify icon=\"eva:heart-outline\" />}\n                    checkedIcon={<Iconify icon=\"eva:heart-fill\" />}\n                  />\n                }\n                label=\"Custom icon\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    color=\"error\"\n                    icon={<Iconify icon={'eva:award-fill'} />}\n                    checkedIcon={<Iconify icon={'eva:award-fill'} />}\n                  />\n                }\n                label=\"Custom icon\"\n              />\n            </Block>\n\n            <Block title=\"Placement\" sx={style}>\n              <FormControl component=\"fieldset\">\n                <FormGroup aria-label=\"position\" row>\n                  <FormControlLabel value=\"top\" label=\"Top\" labelPlacement=\"top\" control={<Checkbox />} />\n                  <FormControlLabel value=\"start\" label=\"Start\" labelPlacement=\"start\" control={<Checkbox />} />\n                  <FormControlLabel value=\"bottom\" label=\"Bottom\" labelPlacement=\"bottom\" control={<Checkbox />} />\n                  <FormControlLabel value=\"end\" label=\"End\" labelPlacement=\"end\" control={<Checkbox />} />\n                </FormGroup>\n              </FormControl>\n            </Block>\n\n            <Block title=\"Adding Colors\">\n              <FormGroup>\n                <FormControlLabel control={<Checkbox defaultChecked color=\"default\" />} label=\"Default\" />\n                <FormControlLabel control={<Checkbox defaultChecked />} label=\"Primary\" />\n                <FormControlLabel control={<Checkbox defaultChecked color=\"secondary\" />} label=\"Secondary\" />\n                <FormControlLabel control={<Checkbox defaultChecked color=\"info\" />} label=\"Info\" />\n                <FormControlLabel control={<Checkbox defaultChecked color=\"success\" />} label=\"Success\" />\n                <FormControlLabel control={<Checkbox defaultChecked color=\"warning\" />} label=\"Warning\" />\n                <FormControlLabel control={<Checkbox defaultChecked color=\"error\" />} label=\"Error\" />\n                <FormControlLabel disabled control={<Checkbox defaultChecked color=\"error\" />} label=\"Disabled\" />\n              </FormGroup>\n\n              <FormControl component=\"fieldset\">\n                <FormGroup>\n                  <FormControlLabel\n                    control={<Checkbox defaultChecked indeterminate color=\"default\" />}\n                    label=\"Default\"\n                  />\n                  <FormControlLabel control={<Checkbox defaultChecked indeterminate />} label=\"Primary\" />\n                  <FormControlLabel\n                    control={<Checkbox defaultChecked indeterminate color=\"secondary\" />}\n                    label=\"Secondary\"\n                  />\n                  <FormControlLabel control={<Checkbox defaultChecked indeterminate color=\"info\" />} label=\"Info\" />\n                  <FormControlLabel\n                    control={<Checkbox defaultChecked indeterminate color=\"success\" />}\n                    label=\"Success\"\n                  />\n                  <FormControlLabel\n                    control={<Checkbox defaultChecked indeterminate color=\"warning\" />}\n                    label=\"Warning\"\n                  />\n                  <FormControlLabel control={<Checkbox defaultChecked indeterminate color=\"error\" />} label=\"Error\" />\n                  <FormControlLabel\n                    disabled\n                    control={<Checkbox defaultChecked indeterminate color=\"error\" />}\n                    label=\"Disabled\"\n                  />\n                </FormGroup>\n              </FormControl>\n            </Block>\n\n            <Block title=\"Indeterminate\" sx={style}>\n              <div>\n                <FormControlLabel\n                  label=\"Parent\"\n                  control={\n                    <Checkbox\n                      checked={checked[0] && checked[1]}\n                      indeterminate={checked[0] !== checked[1]}\n                      onChange={handleChange1}\n                    />\n                  }\n                />\n                <div>\n                  <FormControlLabel\n                    label=\"Child 1\"\n                    control={<Checkbox checked={checked[0]} onChange={handleChange2} />}\n                  />\n                  <FormControlLabel\n                    label=\"Child 2\"\n                    control={<Checkbox checked={checked[1]} onChange={handleChange3} />}\n                  />\n                </div>\n              </div>\n            </Block>\n          </Masonry>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}