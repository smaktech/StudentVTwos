{"version":3,"sources":["components/EmojiPicker.js","utils/getFileFormat.js","sections/@dashboard/chat/ChatRoomAttachment.js","sections/@dashboard/chat/ChatRoomOneParticipant.js","sections/@dashboard/chat/ChatRoomPopup.js","sections/@dashboard/chat/ChatRoomGroupParticipant.js","sections/@dashboard/chat/ChatRoom.js","../node_modules/date-fns/esm/formatDistanceStrict/index.js","../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","sections/@dashboard/chat/ChatMessageItem.js","sections/@dashboard/chat/ChatMessageList.js","sections/@dashboard/chat/ChatHeaderDetail.js","sections/@dashboard/chat/ChatMessageInput.js","sections/@dashboard/chat/ChatHeaderCompose.js","sections/@dashboard/chat/ChatWindow.js","sections/@dashboard/chat/ChatAccount.js","sections/@dashboard/chat/ChatSearchResults.js","sections/@dashboard/chat/ChatContactSearch.js","sections/@dashboard/chat/ChatConversationItem.js","sections/@dashboard/chat/ChatConversationList.js","sections/@dashboard/chat/ChatSidebar.js","pages/dashboard/Chat.js"],"names":["RootStyle","styled","Box","position","PickerStyle","theme","bottom","overflow","left","spacing","boxShadow","customShadows","z20","borderRadius","Number","shape","border","backgroundColor","palette","background","paper","color","text","disabled","primary","borderColor","divider","grey","typography","body2","opacity","fill","subtitle2","cssStyles","bgBlur","action","selected","outline","secondary","EmojiPicker","emojiPicker","value","setValue","alignRight","other","useTheme","useState","emojiPickerState","SetEmojiPicker","main","title","emoji","onSelect","native","onClickAway","sx","right","size","onClick","event","preventDefault","icon","width","height","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","replace","getFileFullName","getIcon","name","src","alt","getFileThumb","thumb","format","includes","getFileFormat","flexGrow","display","flexDirection","paddingBottom","FileItemStyle","alignItems","marginTop","padding","FileThumbStyle","flexShrink","justifyContent","CollapseButtonStyle","Button","overline","ChatRoomAttachment","conversation","isCollapse","onCollapse","totalAttachment","uniq","flatten","messages","map","item","attachments","length","fullWidth","endIcon","Iconify","Divider","Scrollbar","Collapse","in","file","AttachmentItem","id","ml","maxWidth","Typography","variant","noWrap","fDateTime","createdAt","RowStyle","margin","RowIconStyle","marginRight","RowTextStyle","wordWrap","ChatRoomOneParticipant","participants","participant","undefined","pt","pb","Avatar","avatar","mt","textAlign","px","address","phone","email","ChatRoomPopup","isOpen","onClose","open","DialogContent","mb","mx","paragraph","mr","ChatRoomGroupParticipant","selectUserId","onShowPopupUserInfo","disableRipple","HEIGHT","List","disablePadding","Participant","onShowPopup","onClosePopup","status","ListItemButton","ListItemAvatar","BadgeStatus","ListItemText","primaryTypographyProps","secondaryTypographyProps","DRAWER_WIDTH","ToggleButtonStyle","props","IconButton","zIndex","top","z8","borderRight","transition","transitions","create","neutral","ChatRoom","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","isDesktop","useResponsive","isGroup","useEffect","handleOpenSidebar","handleCloseSidebar","renderContent","participantId","prev","Drawer","anchor","ModalProps","keepMounted","MILLISECONDS_IN_MINUTE","MINUTES_IN_DAY","MINUTES_IN_MONTH","MINUTES_IN_YEAR","formatDistanceStrict","dirtyDate","dirtyBaseDate","options","arguments","requiredArgs","locale","defaultLocale","formatDistance","RangeError","comparison","compareAsc","isNaN","dateLeft","dateRight","localizeOptions","cloneObject","addSuffix","Boolean","toDate","roundingMethodFn","roundingMethod","String","Math","floor","ceil","round","unit","milliseconds","getTime","minutes","timezoneOffset","getTimezoneOffsetInMilliseconds","dstNormalizedMinutes","seconds","roundedMinutes","hours","days","months","years","formatDistanceToNowStrict","dirtyOptions","Date","now","marginBottom","ContentStyle","InfoStyle","ChatMessageItem","message","onOpenLightbox","sender","find","senderId","senderDetails","type","isMe","isImage","contentType","firstName","bgcolor","p","Image","body","cursor","ChatMessageList","scrollRef","useRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","current","scrollTop","scrollHeight","imagesLightbox","filter","handleOpenLightbox","url","findIndex","index","scrollableNodeProps","ref","LightboxModal","images","mainSrc","photoIndex","setPhotoIndex","onCloseRequest","minHeight","ChatHeaderDetail","GroupAvatar","OneAvatar","capitalCase","fToNow","lastActivity","AvatarGroup","max","Link","underline","component","paddingLeft","ChatMessageInput","conversationId","onSend","fileInputRef","setMessage","handleAttach","click","handleSend","messageId","uuidv4","Input","disableUnderline","onKeyUp","key","onChange","target","placeholder","startAdornment","InputAdornment","endAdornment","Stack","direction","orientation","flexItem","style","AutocompleteStyle","minWidth","marginLeft","easing","easeInOut","duration","shorter","borderWidth","ChatHeaderCompose","contacts","recipients","onAddRecipients","query","setQuery","Autocomplete","multiple","disablePortal","popupIcon","noOptionsText","SearchNotFound","searchQuery","handleAddRecipients","onInputChange","getOptionLabel","recipient","renderOption","inputValue","matches","match","parts","parse","alpha","part","highlight","renderTags","getTagProps","Chip","label","renderInput","params","TextField","ChatWindow","dispatch","useDispatch","navigate","useNavigate","pathname","useLocation","conversationKey","useParams","useSelector","state","chat","activeConversationId","conversations","byId","unreadCount","conversationSelector","mode","displayParticipants","a","getParticipants","getConversation","console","error","PATH_DASHBOARD","new","getDetails","resetActiveConversation","markConversationAsRead","handleSendMessage","onSendMessage","Object","values","addRecipients","STATUS","ChatAccount","user","useAuth","anchorRef","setOpen","setStatus","MyAvatar","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","py","pr","pl","displayName","Tooltip","ListItem","ListItemIcon","m","Select","e","option","ChatSearchResults","results","onSelectContact","isFound","result","SearchStyle","OutlinedInput","ChatContactSearch","onFocus","ClickAwayListener","FormControl","AvatarWrapperStyle","ChatConversationItem","isSelected","isOpenSidebar","onSelectConversation","details","currentUserId","otherParticipants","displayNames","reduce","names","join","displayText","lastMessage","displayLastActivity","last","isUnread","isOnlineGroup","slice","className","fontSize","lineHeight","whiteSpace","ChatConversationList","loading","allIds","Array","otherParticipant","username","root","handleSelectConversation","contrastText","darker","ChatSidebar","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","displayResults","handleToggleSidebar","handleChangeSearch","axios","get","response","data","handleSearchSelect","transform","visibility","Chat","themeStretch","useSettings","getConversations","getContacts","Page","Container","HeaderBreadcrumbs","heading","links","href","Card"],"mappings":"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","file":"static/js/58.e2acec43.chunk.js","sourcesContent":["import 'emoji-mart/css/emoji-mart.css';\nimport PropTypes from 'prop-types';\nimport { Picker } from 'emoji-mart';\nimport { useState } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, IconButton, ClickAwayListener } from '@mui/material';\n// utils\nimport cssStyles from '../utils/cssStyles';\n//\nimport Iconify from './Iconify';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)({\n  position: 'relative',\n});\n\nconst PickerStyle = styled('div')(({ theme }) => ({\n  bottom: 40,\n  overflow: 'hidden',\n  position: 'absolute',\n  left: theme.spacing(-2),\n  boxShadow: theme.customShadows.z20,\n  borderRadius: Number(theme.shape.borderRadius) * 2,\n  '& .emoji-mart': {\n    border: 'none',\n    backgroundColor: theme.palette.background.paper,\n  },\n  '& .emoji-mart-anchor': {\n    color: theme.palette.text.disabled,\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\n      color: theme.palette.text.primary,\n    },\n  },\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\n  '& .emoji-mart-search input': {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    borderColor: theme.palette.grey[500_32],\n    '&::placeholder': {\n      ...theme.typography.body2,\n      color: theme.palette.text.disabled,\n    },\n  },\n  '& .emoji-mart-search-icon svg': {\n    opacity: 1,\n    fill: theme.palette.text.disabled,\n  },\n  '& .emoji-mart-category-label span': {\n    ...theme.typography.subtitle2,\n    ...cssStyles().bgBlur({ color: theme.palette.background.paper }),\n    color: theme.palette.text.primary,\n  },\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\n    backgroundColor: theme.palette.action.selected,\n  },\n  '& .emoji-mart-emoji': { outline: 'none' },\n  '& .emoji-mart-preview-name': {\n    color: theme.palette.text.primary,\n  },\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\n    color: theme.palette.text.secondary,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nEmojiPicker.propTypes = {\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  setValue: PropTypes.func,\n  alignRight: PropTypes.bool,\n};\n\nexport default function EmojiPicker({ disabled, value, setValue, alignRight = false, ...other }) {\n  const theme = useTheme();\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n  let emojiPicker;\n  if (emojiPickerState) {\n    emojiPicker = (\n      <Picker\n        color={theme.palette.primary.main}\n        title=\"Pick your emoji…\"\n        emoji=\"point_up\"\n        onSelect={(emoji) => setValue(value + emoji?.native)}\n      />\n    );\n  }\n\n  const triggerPicker = (event) => {\n    event.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  };\n\n  const handleClickAway = () => {\n    SetEmojiPicker(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <RootStyle {...other}>\n        <PickerStyle\n          sx={{\n            ...(alignRight && {\n              right: -2,\n              left: 'auto !important',\n            }),\n          }}\n        >\n          {emojiPicker}\n        </PickerStyle>\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\n          <Iconify icon={'eva:smiling-face-fill'} width={20} height={20} />\n        </IconButton>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","// components\nimport Image from '../components/Image';\nimport Iconify from '../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\nconst FORMAT_WORD = ['doc', 'docx'];\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\nconst FORMAT_PDF = ['pdf'];\nconst FORMAT_PHOTOSHOP = ['psd'];\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\n\nexport function getFileType(fileUrl = '') {\n  return (fileUrl && fileUrl.split('.').pop()) || '';\n}\n\nexport function getFileName(fileUrl) {\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\n}\n\nexport function getFileFullName(fileUrl) {\n  return fileUrl.split('/').pop();\n}\n\nexport function getFileFormat(fileUrl) {\n  let format;\n\n  switch (fileUrl.includes(getFileType(fileUrl))) {\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\n      format = 'image';\n      break;\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\n      format = 'video';\n      break;\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\n      format = 'word';\n      break;\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\n      format = 'excel';\n      break;\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\n      format = 'powerpoint';\n      break;\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\n      format = 'pdf';\n      break;\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\n      format = 'photoshop';\n      break;\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\n      format = 'illustrator';\n      break;\n    default:\n      format = getFileType(fileUrl);\n  }\n\n  return format;\n}\n\nconst getIcon = (name) => (\n  <Image\n    src={`https://minimal-assets-api.vercel.app/assets/icons/file/${name}.svg`}\n    alt={name}\n    sx={{ width: 28, height: 28 }}\n  />\n);\n\nexport function getFileThumb(fileUrl) {\n  let thumb;\n  switch (getFileFormat(fileUrl)) {\n    case 'video':\n      thumb = getIcon('format_video');\n      break;\n    case 'word':\n      thumb = getIcon('format_word');\n      break;\n    case 'excel':\n      thumb = getIcon('format_excel');\n      break;\n    case 'powerpoint':\n      thumb = getIcon('format_powerpoint');\n      break;\n    case 'pdf':\n      thumb = getIcon('format_pdf');\n      break;\n    case 'photoshop':\n      thumb = getIcon('format_photoshop');\n      break;\n    case 'illustrator':\n      thumb = getIcon('format_ai');\n      break;\n    case 'image':\n      thumb = <Image src={fileUrl} alt={fileUrl} sx={{ height: 1 }} />;\n      break;\n    default:\n      thumb = <Iconify icon={'eva:file-fill'} sx={{ width: 28, height: 28 }} />;\n  }\n  return thumb;\n}\n","import PropTypes from 'prop-types';\nimport { uniq, flatten } from 'lodash';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Divider, Collapse, Typography } from '@mui/material';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\nimport { getFileFullName, getFileThumb } from '../../../utils/getFileFormat';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  height: '100%',\n  display: 'flex',\n  overflow: 'hidden',\n  flexDirection: 'column',\n  paddingBottom: theme.spacing(2),\n}));\n\nconst FileItemStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  padding: theme.spacing(0, 2.5),\n}));\n\nconst FileThumbStyle = styled('div')(({ theme }) => ({\n  width: 40,\n  height: 40,\n  flexShrink: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.grey[500_16],\n}));\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  flexShrink: 0,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\nChatRoomAttachment.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomAttachment({ conversation, isCollapse, onCollapse }) {\n  const totalAttachment = uniq(flatten(conversation.messages.map((item) => item.attachments))).length;\n\n  return (\n    <RootStyle>\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        attachment ({totalAttachment})\n      </CollapseButtonStyle>\n\n      {!isCollapse && <Divider />}\n\n      <Scrollbar>\n        <Collapse in={isCollapse}>\n          {conversation.messages.map((file) => (\n            <div key={file.id}>\n              {file.attachments.map((fileUrl) => (\n                <AttachmentItem key={fileUrl} file={file} fileUrl={fileUrl} />\n              ))}\n            </div>\n          ))}\n        </Collapse>\n      </Scrollbar>\n    </RootStyle>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nAttachmentItem.propTypes = {\n  file: PropTypes.object,\n  fileUrl: PropTypes.string,\n};\n\nfunction AttachmentItem({ file, fileUrl }) {\n  return (\n    <FileItemStyle key={fileUrl}>\n      <FileThumbStyle>{getFileThumb(fileUrl)}</FileThumbStyle>\n      <Box sx={{ ml: 1.5, maxWidth: 150 }}>\n        <Typography variant=\"body2\" noWrap>\n          {getFileFullName(fileUrl)}\n        </Typography>\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\n          {fDateTime(file.createdAt)}\n        </Typography>\n      </Box>\n    </FileItemStyle>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, Button, Divider, Collapse, Typography } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  margin: theme.spacing(1.5, 0),\n}));\n\nconst RowIconStyle = styled(Iconify)(({ theme }) => ({\n  width: 16,\n  height: 16,\n  marginTop: 4,\n  marginRight: theme.spacing(1),\n  color: theme.palette.text.secondary,\n}));\n\nconst RowTextStyle = styled(Typography)(({ theme }) => ({\n  flexGrow: 1,\n  maxWidth: 160,\n  wordWrap: 'break-word',\n  ...theme.typography.body2,\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomOneParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\nexport default function ChatRoomOneParticipant({ participants, isCollapse, onCollapse }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box\n        sx={{\n          pt: 4,\n          pb: 3,\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <Avatar alt={participant.name} src={participant.avatar} sx={{ width: 96, height: 96 }} />\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            {participant.position}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Divider />\n\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        information\n      </CollapseButtonStyle>\n\n      <Collapse in={isCollapse}>\n        <Box sx={{ px: 2.5, pb: 1 }}>\n          <RowStyle>\n            <RowIconStyle icon={'eva:pin-fill'} />\n            <RowTextStyle>{participant.address}</RowTextStyle>\n          </RowStyle>\n          <RowStyle>\n            <RowIconStyle icon={'eva:phone-fill'} />\n            <RowTextStyle>{participant.phone}</RowTextStyle>\n          </RowStyle>\n          <RowStyle>\n            <RowIconStyle icon={'eva:email-fill'} />\n            <RowTextStyle>{participant.email}</RowTextStyle>\n          </RowStyle>\n        </Box>\n      </Collapse>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Avatar, Typography, DialogContent } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport { DialogAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginTop: theme.spacing(1.5),\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomPopup.propTypes = {\n  participant: PropTypes.object,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default function ChatRoomPopup({ participant, isOpen, onClose }) {\n  const { name, avatar, position, address, phone, email } = participant;\n\n  return (\n    <DialogAnimate fullWidth maxWidth=\"xs\" open={isOpen} onClose={onClose}>\n      <DialogContent sx={{ pb: 5, textAlign: 'center' }}>\n        <Avatar\n          alt={name}\n          src={avatar}\n          sx={{\n            mt: 5,\n            mb: 2,\n            mx: 'auto',\n            width: 96,\n            height: 96,\n          }}\n        />\n        <Typography variant=\"h6\">{name}</Typography>\n        <Typography variant=\"body2\" paragraph sx={{ color: 'text.secondary' }}>\n          {position}\n        </Typography>\n\n        <RowStyle>\n          <Iconify icon={'eva:pin-fill'} sx={{ mr: 1, width: 16, height: 16, color: 'text.disabled' }} />\n          <Typography variant=\"body2\">{address}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <Iconify icon={'eva:phone-fill'} sx={{ mr: 1, width: 16, height: 16, color: 'text.disabled' }} />\n          <Typography variant=\"body2\">{phone}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <Iconify icon={'eva:email-fill'} sx={{ mr: 1, width: 16, height: 16, color: 'text.disabled' }} />\n          <Typography variant=\"body2\">{email}</Typography>\n        </RowStyle>\n      </DialogContent>\n    </DialogAnimate>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, List, Avatar, Button, Collapse, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport BadgeStatus from '../../../components/BadgeStatus';\n//\nimport ChatRoomPopup from './ChatRoomPopup';\n\n// ----------------------------------------------------------------------\n\nconst HEIGHT = 64;\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomGroupParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  selectUserId: PropTypes.string,\n  onShowPopupUserInfo: PropTypes.func,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\nexport default function ChatRoomGroupParticipant({\n  participants,\n  selectUserId,\n  onShowPopupUserInfo,\n  isCollapse,\n  onCollapse,\n}) {\n  return (\n    <>\n      <CollapseButtonStyle\n        fullWidth\n        disableRipple\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        In room ({participants.length})\n      </CollapseButtonStyle>\n\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n        <Scrollbar>\n          <Collapse in={isCollapse} sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n            <List disablePadding>\n              {participants.map((participant) => (\n                <Participant\n                  key={participant.id}\n                  participant={participant}\n                  isOpen={selectUserId === participant.id}\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\n                  onClosePopup={() => onShowPopupUserInfo(null)}\n                />\n              ))}\n            </List>\n          </Collapse>\n        </Scrollbar>\n      </Box>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nParticipant.propTypes = {\n  participant: PropTypes.object.isRequired,\n  isOpen: PropTypes.bool,\n  onClosePopup: PropTypes.func,\n  onShowPopup: PropTypes.func,\n};\n\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }) {\n  const { name, avatar, status, position } = participant;\n\n  return (\n    <>\n      <ListItemButton onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\n        <ListItemAvatar>\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\n            <Avatar alt={name} src={avatar} />\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\n          </Box>\n        </ListItemAvatar>\n        <ListItemText\n          primary={name}\n          secondary={position}\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\n          secondaryTypographyProps={{ noWrap: true }}\n        />\n      </ListItemButton>\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Drawer, Divider, IconButton } from '@mui/material';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// components\nimport Iconify from '../../../components/Iconify';\n//\nimport ChatRoomAttachment from './ChatRoomAttachment';\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 240;\n\nconst ToggleButtonStyle = styled((props) => <IconButton disableRipple {...props} />)(({ theme }) => ({\n  right: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(1),\n  boxShadow: theme.customShadows.z8,\n  backgroundColor: theme.palette.background.paper,\n  border: `solid 1px ${theme.palette.divider}`,\n  borderRight: 0,\n  borderRadius: `12px 0 0 12px`,\n  transition: theme.transitions.create('all'),\n  '&:hover': {\n    backgroundColor: theme.palette.background.neutral,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoom.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  participants: PropTypes.array.isRequired,\n};\n\nexport default function ChatRoom({ conversation, participants }) {\n  const theme = useTheme();\n\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [showInfo, setShowInfo] = useState(true);\n  const [selectUser, setSelectUser] = useState(null);\n  const [showAttachment, setShowAttachment] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n\n  const isDesktop = useResponsive('up', 'lg');\n\n  const isGroup = participants.length > 1;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      return handleCloseSidebar();\n    }\n    return handleOpenSidebar();\n  }, [isDesktop]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar((prev) => !prev);\n  };\n\n  const renderContent = (\n    <>\n      {isGroup ? (\n        <ChatRoomGroupParticipant\n          selectUserId={selectUser}\n          participants={participants}\n          isCollapse={showParticipants}\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\n          onCollapse={() => setShowParticipants((prev) => !prev)}\n        />\n      ) : (\n        <div>\n          <ChatRoomOneParticipant\n            participants={participants}\n            isCollapse={showInfo}\n            onCollapse={() => setShowInfo((prev) => !prev)}\n          />\n        </div>\n      )}\n      <Divider />\n\n      <ChatRoomAttachment\n        conversation={conversation}\n        isCollapse={showAttachment}\n        onCollapse={() => setShowAttachment((prev) => !prev)}\n      />\n    </>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <ToggleButtonStyle\n        onClick={handleToggleSidebar}\n        sx={{\n          ...(openSidebar && isDesktop && { right: DRAWER_WIDTH }),\n        }}\n      >\n        <Iconify width={16} height={16} icon={openSidebar ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'} />\n      </ToggleButtonStyle>\n\n      {isDesktop ? (\n        <Drawer\n          open={openSidebar}\n          anchor=\"right\"\n          variant=\"persistent\"\n          sx={{\n            height: 1,\n            width: DRAWER_WIDTH,\n            transition: theme.transitions.create('width'),\n            ...(!openSidebar && { width: '0px' }),\n            '& .MuiDrawer-paper': {\n              position: 'static',\n              width: DRAWER_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          anchor=\"right\"\n          ModalProps={{ keepMounted: true }}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n          sx={{\n            '& .MuiDrawer-paper': {\n              width: DRAWER_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 1000 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft); // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    var seconds = roundingMethodFn(milliseconds / 1000);\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && options.unit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), dirtyOptions);\n}","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Avatar, Box, Typography } from '@mui/material';\n// components\nimport Image from '../../../components/Image';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(3),\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 320,\n  padding: theme.spacing(1.5),\n  marginTop: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n}));\n\nconst InfoStyle = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(0.75),\n  color: theme.palette.text.secondary,\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  conversation: PropTypes.object.isRequired,\n  onOpenLightbox: PropTypes.func,\n};\n\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox }) {\n  const sender = conversation.participants.find((participant) => participant.id === message.senderId);\n  const senderDetails =\n    message.senderId === '8864c717-587d-472a-929a-8e5f298024da-0'\n      ? { type: 'me' }\n      : { avatar: sender?.avatar, name: sender?.name };\n\n  const isMe = senderDetails.type === 'me';\n  const isImage = message.contentType === 'image';\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n\n  return (\n    <RootStyle>\n      <Box\n        sx={{\n          display: 'flex',\n          ...(isMe && {\n            ml: 'auto',\n          }),\n        }}\n      >\n        {senderDetails.type !== 'me' && (\n          <Avatar alt={senderDetails.name} src={senderDetails.avatar} sx={{ width: 32, height: 32, mr: 2 }} />\n        )}\n\n        <div>\n          <InfoStyle\n            variant=\"caption\"\n            sx={{\n              ...(isMe && { justifyContent: 'flex-end' }),\n            }}\n          >\n            {!isMe && `${firstName},`}&nbsp;\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\n              addSuffix: true,\n            })}\n          </InfoStyle>\n\n          <ContentStyle\n            sx={{\n              ...(isMe && { color: 'grey.800', bgcolor: 'primary.lighter' }),\n              ...(isImage && { p: 0 }),\n            }}\n          >\n            {isImage ? (\n              <Image\n                alt=\"attachment\"\n                src={message.body}\n                onClick={() => onOpenLightbox(message.body)}\n                sx={{ borderRadius: 1, cursor: 'pointer', '&:hover': { opacity: 0.8 } }}\n              />\n            ) : (\n              <Typography variant=\"body2\">{message.body}</Typography>\n            )}\n          </ContentStyle>\n        </div>\n      </Box>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { findIndex } from 'lodash';\nimport { useEffect, useState, useRef } from 'react';\n//\nimport Scrollbar from '../../../components/Scrollbar';\nimport LightboxModal from '../../../components/LightboxModal';\nimport ChatMessageItem from './ChatMessageItem';\n\n// ----------------------------------------------------------------------\n\nChatMessageList.propTypes = {\n  conversation: PropTypes.object.isRequired,\n};\n\nexport default function ChatMessageList({ conversation }) {\n  const scrollRef = useRef(null);\n\n  const [openLightbox, setOpenLightbox] = useState(false);\n\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      }\n    };\n    scrollMessagesToBottom();\n  }, [conversation.messages]);\n\n  const imagesLightbox = conversation.messages\n    .filter((messages) => messages.contentType === 'image')\n    .map((messages) => messages.body);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3, height: 1 }}>\n        {conversation.messages.map((message) => (\n          <ChatMessageItem\n            key={message.id}\n            message={message}\n            conversation={conversation}\n            onOpenLightbox={handleOpenLightbox}\n          />\n        ))}\n      </Scrollbar>\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { capitalCase } from 'change-case';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Avatar, Typography, AvatarGroup, IconButton } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// components\nimport Iconify from '../../../components/Iconify';\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexShrink: 0,\n  minHeight: 92,\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 3),\n}));\n\n// ----------------------------------------------------------------------\n\nChatHeaderDetail.propTypes = {\n  participants: PropTypes.array.isRequired,\n};\n\nexport default function ChatHeaderDetail({ participants }) {\n  const isGroup = participants.length > 1;\n\n  return (\n    <RootStyle>\n      {isGroup ? <GroupAvatar participants={participants} /> : <OneAvatar participants={participants} />}\n\n      <Box sx={{ flexGrow: 1 }} />\n      <IconButton>\n        <Iconify icon=\"eva:phone-fill\" width={20} height={20} />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"eva:video-fill\" width={20} height={20} />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" width={20} height={20} />\n      </IconButton>\n    </RootStyle>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nOneAvatar.propTypes = {\n  participants: PropTypes.array.isRequired,\n};\n\nfunction OneAvatar({ participants }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined || !participant.status) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ position: 'relative' }}>\n        <Avatar src={participant.avatar} alt={participant.name} />\n        <BadgeStatus status={participant.status} sx={{ position: 'absolute', right: 2, bottom: 2 }} />\n      </Box>\n      <Box sx={{ ml: 2 }}>\n        <Typography variant=\"subtitle2\">{participant.name}</Typography>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {participant.status !== 'offline' ? capitalCase(participant.status) : fToNow(participant.lastActivity || '')}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nGroupAvatar.propTypes = {\n  participants: PropTypes.array.isRequired,\n};\n\nfunction GroupAvatar({ participants }) {\n  return (\n    <div>\n      <AvatarGroup\n        max={3}\n        sx={{\n          mb: 0.5,\n          '& .MuiAvatar-root': { width: 32, height: 32 },\n        }}\n      >\n        {participants.map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatar} />\n        ))}\n      </AvatarGroup>\n      <Link variant=\"body2\" underline=\"none\" component=\"button\" color=\"text.secondary\" onClick={() => {}}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {participants.length} persons\n          <Iconify icon=\"eva:arrow-ios-forward-fill\" />\n        </Box>\n      </Link>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useRef, useState } from 'react';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Stack, Input, Divider, IconButton, InputAdornment } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport EmojiPicker from '../../../components/EmojiPicker';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  minHeight: 56,\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  paddingLeft: theme.spacing(2),\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageInput.propTypes = {\n  disabled: PropTypes.bool,\n  conversationId: PropTypes.string,\n  onSend: PropTypes.func,\n};\n\nexport default function ChatMessageInput({ disabled, conversationId, onSend }) {\n  const fileInputRef = useRef(null);\n  const [message, setMessage] = useState('');\n\n  const handleAttach = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  const handleSend = () => {\n    if (!message) {\n      return '';\n    }\n    if (onSend && conversationId) {\n      onSend({\n        conversationId,\n        messageId: uuidv4(),\n        message,\n        contentType: 'text',\n        attachments: [],\n        createdAt: new Date(),\n        senderId: '8864c717-587d-472a-929a-8e5f298024da-0',\n      });\n    }\n    return setMessage('');\n  };\n\n  return (\n    <RootStyle>\n      <Input\n        disabled={disabled}\n        fullWidth\n        value={message}\n        disableUnderline\n        onKeyUp={handleKeyUp}\n        onChange={(event) => setMessage(event.target.value)}\n        placeholder=\"Type a message\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\n          </InputAdornment>\n        }\n        endAdornment={\n          <Stack direction=\"row\" spacing={1} sx={{ flexShrink: 0, mr: 1.5 }}>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Iconify icon=\"ic:round-add-photo-alternate\" width={22} height={22} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Iconify icon=\"eva:attach-2-fill\" width={22} height={22} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\">\n              <Iconify icon=\"eva:mic-fill\" width={22} height={22} />\n            </IconButton>\n          </Stack>\n        }\n      />\n\n      <Divider orientation=\"vertical\" flexItem />\n\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\n        <Iconify icon=\"ic:round-send\" width={22} height={22} />\n      </IconButton>\n\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Avatar, TextField, Typography, Autocomplete, Chip } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport SearchNotFound from '../../../components/SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 3),\n}));\n\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\n  '& .MuiAutocomplete-root': {\n    minWidth: 280,\n    marginLeft: theme.spacing(2),\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\n      boxShadow: theme.customShadows.z8,\n    },\n  },\n  '& .MuiAutocomplete-inputRoot': {\n    transition: theme.transitions.create('box-shadow', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shorter,\n    }),\n    '& fieldset': {\n      borderWidth: `1px !important`,\n      borderColor: `${theme.palette.grey[500_32]} !important`,\n    },\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nChatHeaderCompose.propTypes = {\n  contacts: PropTypes.array,\n  recipients: PropTypes.array,\n  onAddRecipients: PropTypes.func,\n};\n\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipients }) {\n  const [query, setQuery] = useState('');\n\n  const handleAddRecipients = (recipients) => {\n    setQuery('');\n    onAddRecipients(recipients);\n  };\n\n  return (\n    <RootStyle>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n        To:\n      </Typography>\n\n      <AutocompleteStyle>\n        <Autocomplete\n          multiple\n          size=\"small\"\n          disablePortal\n          popupIcon={null}\n          noOptionsText={<SearchNotFound searchQuery={query} />}\n          onChange={(event, value) => handleAddRecipients(value)}\n          onInputChange={(event, value) => setQuery(value)}\n          options={contacts}\n          getOptionLabel={(recipient) => recipient.name}\n          renderOption={(props, recipient, { inputValue, selected }) => {\n            const { name, avatar } = recipient;\n            const matches = match(name, inputValue);\n            const parts = parse(name, matches);\n            return (\n              <li {...props}>\n                <Box\n                  sx={{\n                    width: 32,\n                    height: 32,\n                    overflow: 'hidden',\n                    borderRadius: '50%',\n                    position: 'relative',\n                  }}\n                >\n                  <Avatar alt={name} src={avatar} />\n                  <Box\n                    sx={{\n                      top: 0,\n                      opacity: 0,\n                      width: '100%',\n                      height: '100%',\n                      display: 'flex',\n                      position: 'absolute',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                      transition: (theme) =>\n                        theme.transitions.create('opacity', {\n                          easing: theme.transitions.easing.easeInOut,\n                          duration: theme.transitions.duration.shorter,\n                        }),\n                      ...(selected && {\n                        opacity: 1,\n                        color: 'primary.main',\n                      }),\n                    }}\n                  >\n                    <Iconify icon=\"eva:checkmark-fill\" width={20} height={20} />\n                  </Box>\n                </Box>\n                <Box sx={{ ml: 2 }} />\n                {parts.map((part, index) => (\n                  <Typography key={index} variant=\"subtitle2\" color={part.highlight ? 'primary' : 'textPrimary'}>\n                    {part.text}\n                  </Typography>\n                ))}\n              </li>\n            );\n          }}\n          renderTags={(recipients, getTagProps) =>\n            recipients.map((recipient, index) => {\n              const { id, name, avatar } = recipient;\n              return (\n                <Chip\n                  {...getTagProps({ index })}\n                  key={id}\n                  size=\"small\"\n                  label={name}\n                  color=\"info\"\n                  avatar={<Avatar alt={name} src={avatar} />}\n                />\n              );\n            })\n          }\n          renderInput={(params) => <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />}\n        />\n      </AutocompleteStyle>\n    </RootStyle>\n  );\n}\n","import { useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\n// @mui\nimport { Box, Divider, Stack } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport {\n  addRecipients,\n  onSendMessage,\n  getConversation,\n  getParticipants,\n  markConversationAsRead,\n  resetActiveConversation,\n} from '../../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport ChatRoom from './ChatRoom';\nimport ChatMessageList from './ChatMessageList';\nimport ChatHeaderDetail from './ChatHeaderDetail';\nimport ChatMessageInput from './ChatMessageInput';\nimport ChatHeaderCompose from './ChatHeaderCompose';\n\n// ----------------------------------------------------------------------\n\nconst conversationSelector = (state) => {\n  const { conversations, activeConversationId } = state.chat;\n  const conversation = activeConversationId ? conversations.byId[activeConversationId] : null;\n  if (conversation) {\n    return conversation;\n  }\n  const initState = {\n    id: '',\n    messages: [],\n    participants: [],\n    unreadCount: 0,\n    type: '',\n  };\n  return initState;\n};\n\nexport default function ChatWindow() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const { conversationKey } = useParams();\n  const { contacts, recipients, participants, activeConversationId } = useSelector((state) => state.chat);\n  const conversation = useSelector((state) => conversationSelector(state));\n\n  const mode = conversationKey ? 'DETAIL' : 'COMPOSE';\n  const displayParticipants = participants.filter((item) => item.id !== '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  useEffect(() => {\n    const getDetails = async () => {\n      dispatch(getParticipants(conversationKey));\n      try {\n        await dispatch(getConversation(conversationKey));\n      } catch (error) {\n        console.error(error);\n        navigate(PATH_DASHBOARD.chat.new);\n      }\n    };\n    if (conversationKey) {\n      getDetails();\n    } else if (activeConversationId) {\n      dispatch(resetActiveConversation());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversationKey]);\n\n  useEffect(() => {\n    if (activeConversationId) {\n      dispatch(markConversationAsRead(activeConversationId));\n    }\n  }, [dispatch, activeConversationId]);\n\n  const handleAddRecipients = (recipients) => {\n    dispatch(addRecipients(recipients));\n  };\n\n  const handleSendMessage = async (value) => {\n    try {\n      dispatch(onSendMessage(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Stack sx={{ flexGrow: 1, minWidth: '1px' }}>\n      {mode === 'DETAIL' ? (\n        <ChatHeaderDetail participants={displayParticipants} />\n      ) : (\n        <ChatHeaderCompose\n          recipients={recipients}\n          contacts={Object.values(contacts.byId)}\n          onAddRecipients={handleAddRecipients}\n        />\n      )}\n\n      <Divider />\n\n      <Box sx={{ flexGrow: 1, display: 'flex', overflow: 'hidden' }}>\n        <Stack sx={{ flexGrow: 1 }}>\n          <ChatMessageList conversation={conversation} />\n\n          <Divider />\n\n          <ChatMessageInput\n            conversationId={activeConversationId}\n            onSend={handleSendMessage}\n            disabled={pathname === PATH_DASHBOARD.chat.new}\n          />\n        </Stack>\n\n        {mode === 'DETAIL' && <ChatRoom conversation={conversation} participants={displayParticipants} />}\n      </Box>\n    </Stack>\n  );\n}\n","import { useState, useRef } from 'react';\nimport { capitalCase } from 'change-case';\n// @mui\nimport {\n  Box,\n  List,\n  Select,\n  Divider,\n  Popover,\n  Tooltip,\n  ListItem,\n  Typography,\n  IconButton,\n  ListItemText,\n  ListItemIcon,\n  ListItemButton,\n} from '@mui/material';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\n// components\nimport Iconify from '../../../components/Iconify';\nimport MyAvatar from '../../../components/MyAvatar';\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst STATUS = ['online', 'invisible', 'away'];\n\nexport default function ChatAccount() {\n  const { user } = useAuth();\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [status, setStatus] = useState('online');\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Box ref={anchorRef} sx={{ position: 'relative' }}>\n        <MyAvatar onClick={handleOpen} sx={{ cursor: 'pointer', width: 48, height: 48 }} />\n        <BadgeStatus status={status} sx={{ position: 'absolute', bottom: 2, right: 2 }} />\n      </Box>\n\n      <Popover\n        open={open}\n        onClose={handleClose}\n        anchorEl={anchorRef.current}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n      >\n        <Box sx={{ py: 2, pr: 1, pl: 2.5, display: 'flex', alignItems: 'center' }}>\n          <MyAvatar />\n\n          <Box sx={{ ml: 2, mr: 3 }}>\n            <Typography noWrap variant=\"subtitle1\">\n              {user?.displayName}\n            </Typography>\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {user?.email}\n            </Typography>\n          </Box>\n\n          <Tooltip title=\"Log out\">\n            <IconButton>\n              <Iconify icon=\"ic:round-power-settings-new\" width={20} height={20} />\n            </IconButton>\n          </Tooltip>\n        </Box>\n\n        <Divider />\n\n        <List>\n          <ListItem sx={{ px: 2.5 }}>\n            <ListItemIcon>\n              <BadgeStatus size=\"large\" status={status} sx={{ m: 0.5 }} />\n            </ListItemIcon>\n            <ListItemText>\n              <Select\n                native\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n                sx={{\n                  '& svg': { display: `none` },\n                  '& select': { p: 0, typography: 'body2' },\n                  '& fieldset': { display: 'none' },\n                }}\n              >\n                {STATUS.map((option) => (\n                  <option key={option} value={option}>\n                    {capitalCase(option)}\n                  </option>\n                ))}\n              </Select>\n            </ListItemText>\n          </ListItem>\n\n          <ListItemButton sx={{ px: 2.5 }}>\n            <ListItemIcon>\n              <Iconify icon=\"ic:round-account-box\" width={20} height={20} />\n            </ListItemIcon>\n            <ListItemText primary=\"Profile\" primaryTypographyProps={{ variant: 'body2' }} />\n          </ListItemButton>\n\n          <ListItemButton sx={{ px: 2.5 }}>\n            <ListItemIcon>\n              <Iconify icon=\"eva:settings-2-fill\" width={20} height={20} />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" primaryTypographyProps={{ variant: 'body2' }} />\n          </ListItemButton>\n        </List>\n      </Popover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { List, Avatar, Typography, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n//\nimport SearchNotFound from '../../../components/SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nChatSearchResults.propTypes = {\n  query: PropTypes.string,\n  results: PropTypes.array,\n  onSelectContact: PropTypes.func,\n};\n\nexport default function ChatSearchResults({ query, results, onSelectContact }) {\n  const isFound = results.length > 0;\n\n  return (\n    <>\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\n        Contacts\n      </Typography>\n\n      <List disablePadding>\n        {results.map((result) => (\n          <ListItemButton\n            key={result.id}\n            onClick={() => onSelectContact(result)}\n            sx={{\n              py: 1.5,\n              px: 3,\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar alt={result.name} src={result.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={result.name}\n              primaryTypographyProps={{\n                noWrap: true,\n                variant: 'subtitle2',\n              }}\n            />\n          </ListItemButton>\n        ))}\n      </List>\n      {!isFound && (\n        <SearchNotFound\n          searchQuery={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 48px)`,\n            bgcolor: 'background.neutral',\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { FormControl, OutlinedInput, InputAdornment, ClickAwayListener } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  marginTop: theme.spacing(2),\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  transition: theme.transitions.create('box-shadow', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': { boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nChatContactSearch.propTypes = {\n  query: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onClickAway: PropTypes.func,\n};\n\nexport default function ChatContactSearch({ query, onChange, onFocus, onClickAway, ...other }) {\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <RootStyle {...other}>\n        <FormControl fullWidth size=\"small\">\n          <SearchStyle\n            value={query}\n            onFocus={onFocus}\n            onChange={onChange}\n            placeholder=\"Search contacts...\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","import { last } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n//\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst AVATAR_SIZE = 48;\nconst AVATAR_SIZE_GROUP = 32;\n\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\n  padding: theme.spacing(1.5, 3),\n  transition: theme.transitions.create('all'),\n}));\n\nconst AvatarWrapperStyle = styled('div')({\n  position: 'relative',\n  width: AVATAR_SIZE,\n  height: AVATAR_SIZE,\n  '& .MuiAvatar-img': { borderRadius: '50%' },\n  '& .MuiAvatar-root': { width: '100%', height: '100%' },\n});\n\n// ----------------------------------------------------------------------\n\nconst getDetails = (conversation, currentUserId) => {\n  const otherParticipants = conversation.participants.filter((participant) => participant.id !== currentUserId);\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\n  let displayText = '';\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n    displayText = `${sender}${message}`;\n  }\n  return { otherParticipants, displayNames, displayText };\n};\n\nChatConversationItem.propTypes = {\n  isSelected: PropTypes.bool,\n  conversation: PropTypes.object.isRequired,\n  isOpenSidebar: PropTypes.bool,\n  onSelectConversation: PropTypes.func,\n};\n\nexport default function ChatConversationItem({ isSelected, conversation, isOpenSidebar, onSelectConversation }) {\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  const displayLastActivity = last(conversation.messages).createdAt;\n  const isGroup = details.otherParticipants.length > 1;\n  const isUnread = conversation.unreadCount > 0;\n  const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\n\n  return (\n    <RootStyle\n      onClick={onSelectConversation}\n      sx={{\n        ...(isSelected && { bgcolor: 'action.selected' }),\n      }}\n    >\n      <ListItemAvatar>\n        <Box\n          sx={{\n            ...(isGroup && {\n              position: 'relative',\n              width: AVATAR_SIZE,\n              height: AVATAR_SIZE,\n              '& .avatarWrapper': {\n                position: 'absolute',\n                width: AVATAR_SIZE_GROUP,\n                height: AVATAR_SIZE_GROUP,\n                '&:nth-of-type(1)': {\n                  left: 0,\n                  zIndex: 9,\n                  bottom: 2,\n                  '& .MuiAvatar-root': {\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`,\n                  },\n                },\n                '&:nth-of-type(2)': { top: 2, right: 0 },\n              },\n            }),\n          }}\n        >\n          {details.otherParticipants.slice(0, 2).map((participant) => (\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant.id}>\n              <Avatar alt={participant.name} src={participant.avatar} />\n              {!isGroup && (\n                <BadgeStatus status={participant.status} sx={{ right: 2, bottom: 2, position: 'absolute' }} />\n              )}\n            </AvatarWrapperStyle>\n          ))}\n\n          {isOnlineGroup && <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />}\n        </Box>\n      </ListItemAvatar>\n\n      {isOpenSidebar && (\n        <>\n          <ListItemText\n            primary={details.displayNames}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2',\n            }}\n            secondary={details.displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              variant: isUnread ? 'subtitle2' : 'body2',\n              color: isUnread ? 'textPrimary' : 'textSecondary',\n            }}\n          />\n\n          <Box\n            sx={{\n              ml: 2,\n              height: 44,\n              display: 'flex',\n              alignItems: 'flex-end',\n              flexDirection: 'column',\n            }}\n          >\n            <Box\n              sx={{\n                mb: 1.25,\n                fontSize: 12,\n                lineHeight: '22px',\n                whiteSpace: 'nowrap',\n                color: 'text.disabled',\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\n                addSuffix: false,\n              })}\n            </Box>\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\n          </Box>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n// @mui\nimport { List } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport { SkeletonConversationItem } from '../../../components/skeleton';\n//\nimport ChatConversationItem from './ChatConversationItem';\n\n// ----------------------------------------------------------------------\n\nChatConversationList.propTypes = {\n  conversations: PropTypes.object,\n  isOpenSidebar: PropTypes.bool,\n  activeConversationId: PropTypes.string,\n  sx: PropTypes.object,\n};\n\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, sx, ...other }) {\n  const navigate = useNavigate();\n\n  const handleSelectConversation = (conversationId) => {\n    let conversationKey = '';\n    const conversation = conversations.byId[conversationId];\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation.id;\n    } else {\n      const otherParticipant = conversation.participants.find(\n        (participant) => participant.id !== '8864c717-587d-472a-929a-8e5f298024da-0'\n      );\n      if (otherParticipant?.username) {\n        conversationKey = otherParticipant?.username;\n      }\n    }\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\n  };\n\n  const loading = !conversations.allIds.length;\n\n  return (\n    <List disablePadding sx={sx} {...other}>\n      {(loading ? [...Array(12)] : conversations.allIds).map((conversationId, index) =>\n        conversationId ? (\n          <ChatConversationItem\n            key={conversationId}\n            isOpenSidebar={isOpenSidebar}\n            conversation={conversations.byId[conversationId]}\n            isSelected={activeConversationId === conversationId}\n            onSelectConversation={() => handleSelectConversation(conversationId)}\n          />\n        ) : (\n          <SkeletonConversationItem key={index} />\n        )\n      )}\n    </List>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Stack, Drawer, IconButton } from '@mui/material';\n// redux\nimport { useSelector } from '../../../redux/store';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// utils\nimport axios from '../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\n//\nimport ChatAccount from './ChatAccount';\nimport ChatSearchResults from './ChatSearchResults';\nimport ChatContactSearch from './ChatContactSearch';\nimport ChatConversationList from './ChatConversationList';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 320;\nconst COLLAPSE_WIDTH = 96;\n\nconst ToggleButtonStyle = styled((props) => <IconButton disableRipple {...props} />)(({ theme }) => ({\n  left: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(13),\n  borderRadius: `0 12px 12px 0`,\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n  boxShadow: theme.customShadows.primary,\n  '&:hover': {\n    backgroundColor: theme.palette.primary.darker,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ChatSidebar() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearchFocused, setSearchFocused] = useState(false);\n  const { conversations, activeConversationId } = useSelector((state) => state.chat);\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const displayResults = searchQuery && isSearchFocused;\n\n  const isCollapse = isDesktop && !openSidebar;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      return handleCloseSidebar();\n    }\n    return handleOpenSidebar();\n  }, [isDesktop, pathname]);\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (!openSidebar) {\n      return setSearchFocused(false);\n    }\n  }, [openSidebar]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar((prev) => !prev);\n  };\n\n  const handleClickAwaySearch = () => {\n    setSearchFocused(false);\n    setSearchQuery('');\n  };\n\n  const handleChangeSearch = async (event) => {\n    try {\n      const { value } = event.target;\n      setSearchQuery(value);\n      if (value) {\n        const response = await axios.get('/api/chat/search', {\n          params: { query: value },\n        });\n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setSearchFocused(true);\n  };\n\n  const handleSearchSelect = (username) => {\n    setSearchFocused(false);\n    setSearchQuery('');\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\n  };\n\n  const handleSelectContact = (result) => {\n    if (handleSearchSelect) {\n      handleSearchSelect(result.username);\n    }\n  };\n\n  const renderContent = (\n    <>\n      <Box sx={{ py: 2, px: 3 }}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n          {!isCollapse && (\n            <>\n              <ChatAccount />\n              <Box sx={{ flexGrow: 1 }} />\n            </>\n          )}\n\n          <IconButton onClick={handleToggleSidebar}>\n            <Iconify\n              width={20}\n              height={20}\n              icon={openSidebar ? 'eva:arrow-ios-back-fill' : 'eva:arrow-ios-forward-fill'}\n            />\n          </IconButton>\n\n          {!isCollapse && (\n            <IconButton onClick={() => navigate(PATH_DASHBOARD.chat.new)}>\n              <Iconify icon={'eva:edit-fill'} width={20} height={20} />\n            </IconButton>\n          )}\n        </Stack>\n\n        {!isCollapse && (\n          <ChatContactSearch\n            query={searchQuery}\n            onFocus={handleSearchFocus}\n            onChange={handleChangeSearch}\n            onClickAway={handleClickAwaySearch}\n          />\n        )}\n      </Box>\n\n      <Scrollbar>\n        {!displayResults ? (\n          <ChatConversationList\n            conversations={conversations}\n            isOpenSidebar={openSidebar}\n            activeConversationId={activeConversationId}\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\n          />\n        ) : (\n          <ChatSearchResults query={searchQuery} results={searchResults} onSelectContact={handleSelectContact} />\n        )}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <>\n      {!isDesktop && (\n        <ToggleButtonStyle onClick={handleToggleSidebar}>\n          <Iconify width={16} height={16} icon={'eva:people-fill'} />\n        </ToggleButtonStyle>\n      )}\n\n      {isDesktop ? (\n        <Drawer\n          open={openSidebar}\n          variant=\"persistent\"\n          sx={{\n            width: DRAWER_WIDTH,\n            transition: theme.transitions.create('width'),\n            '& .MuiDrawer-paper': {\n              position: 'static',\n              width: DRAWER_WIDTH,\n            },\n            ...(isCollapse && {\n              width: COLLAPSE_WIDTH,\n              '& .MuiDrawer-paper': {\n                width: COLLAPSE_WIDTH,\n                position: 'static',\n                transform: 'none !important',\n                visibility: 'visible !important',\n              },\n            }),\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          ModalProps={{ keepMounted: true }}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n          sx={{\n            '& .MuiDrawer-paper': { width: DRAWER_WIDTH },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n","import { useEffect } from 'react';\n// @mui\nimport { Card, Container } from '@mui/material';\n// redux\nimport { useDispatch } from '../../redux/store';\nimport { getConversations, getContacts } from '../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { ChatSidebar, ChatWindow } from '../../sections/@dashboard/chat';\n\n// ----------------------------------------------------------------------\n\nexport default function Chat() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getConversations());\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Chat\">\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <HeaderBreadcrumbs\n          heading=\"Chat\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Chat' }]}\n        />\n        <Card sx={{ height: '72vh', display: 'flex' }}>\n          <ChatSidebar />\n          <ChatWindow />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}