{"version":3,"sources":["pages/overview/Block.js","pages/overview/foundation/FoundationGrid.js"],"names":["Block","title","sx","children","variant","borderRadius","bgcolor","theme","alpha","palette","grey","p","minHeight","Label","component","gutterBottom","color","RootStyle","styled","paddingTop","spacing","paddingBottom","ContainerStyle","Paper","padding","border","divider","Number","shape","backgroundColor","mode","LABELS","FoundationGrid","useTheme","useState","setSpacing","column","setColumn","pt","pb","mb","heading","links","name","href","PATH_PAGE","components","textAlign","container","map","value","item","xs","height","boxShadow","customShadows","z8","row","toString","onChange","event","target","mt","display","justifyContent","label","control","py","index"],"mappings":"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","file":"static/js/91.0e5f3d8e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBlock.propTypes = {\n  children: PropTypes.any.isRequired,\n  sx: PropTypes.object,\n  title: PropTypes.string,\n};\n\nexport function Block({ title, sx, children }) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport function Label({ title }) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Grid, Paper, Radio, Container, Typography, RadioGroup, FormControlLabel, Stack } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Page from '../../../components/Page';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\n//\nimport { Block } from '../Block';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\nconst ContainerStyle = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(5),\n  border: `solid 1px ${theme.palette.divider}`,\n  borderRadius: Number(theme.shape.borderRadius) * 1.5,\n  backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 100 : 800],\n}));\n\n// ----------------------------------------------------------------------\n\nconst LABELS = ['1col', '2col', '3col', '4col', '6col', '12col'];\n\nexport default function FoundationGrid() {\n  const theme = useTheme();\n  const [spacing, setSpacing] = useState(2);\n  const [column, setColumn] = useState(3);\n\n  const handleChangeSpacing = (event) => {\n    setSpacing(Number(event.target.value));\n  };\n\n  const handleChangeColumn = (event) => {\n    setColumn(Number(event.target.value));\n  };\n\n  return (\n    <Page title=\"Foundations: Grid\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Grid\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Grid' }]}\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Stack spacing={5}>\n            <Block title=\"Spacing\">\n              <ContainerStyle variant=\"outlined\">\n                <Typography variant=\"body2\" sx={{ mb: 3, textAlign: 'center' }}>\n                  Spacing: <strong>{theme.spacing(Number(spacing))}</strong>\n                </Typography>\n\n                <Grid container spacing={spacing}>\n                  {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((value) => (\n                    <Grid key={value} item xs={1}>\n                      <Paper\n                        sx={{\n                          height: 80,\n                          boxShadow: (theme) => theme.customShadows.z8,\n                        }}\n                      />\n                    </Grid>\n                  ))}\n                </Grid>\n\n                <RadioGroup\n                  row\n                  name=\"spacing\"\n                  value={spacing.toString()}\n                  onChange={handleChangeSpacing}\n                  sx={{\n                    mt: 3,\n                    display: 'flex',\n                    justifyContent: 'center',\n                  }}\n                >\n                  {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((value) => (\n                    <FormControlLabel\n                      key={value}\n                      value={value.toString()}\n                      label={value.toString()}\n                      control={<Radio />}\n                    />\n                  ))}\n                </RadioGroup>\n              </ContainerStyle>\n            </Block>\n\n            <Block title=\"Column\">\n              <ContainerStyle variant=\"outlined\">\n                <Grid container spacing={3}>\n                  {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((value) => (\n                    <Grid key={value} item xs={column}>\n                      <Paper\n                        sx={{\n                          py: 3,\n                          textAlign: 'center',\n                          boxShadow: (theme) => theme.customShadows.z8,\n                        }}\n                      >\n                        xs = {column}\n                      </Paper>\n                    </Grid>\n                  ))}\n                </Grid>\n\n                <RadioGroup\n                  row\n                  name=\"column\"\n                  value={column.toString()}\n                  onChange={handleChangeColumn}\n                  sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}\n                >\n                  {[12, 6, 4, 3, 2, 1].map((value, index) => (\n                    <FormControlLabel key={value} value={value.toString()} label={LABELS[index]} control={<Radio />} />\n                  ))}\n                </RadioGroup>\n              </ContainerStyle>\n            </Block>\n          </Stack>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}